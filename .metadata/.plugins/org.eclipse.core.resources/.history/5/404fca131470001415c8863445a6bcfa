import java.awt.Color;
import java.awt.Font;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.geom.Ellipse2D;

import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

abstract class Term extends JComponent implements MouseListener {

	int weight, rotateDir;
	Ellipse2D circle;
	JTextField edit;
	public static final int W = 60;

	public Term() {

		setLayout(null);
		setOpaque(false);
		edit = new JTextField();
		edit.setForeground(Color.white);
		edit.setOpaque(false);
		edit.setBorder(null);
		edit.setDocument(new LengthRestrictedDocument(2));
		edit.setHorizontalAlignment(JTextField.CENTER);
		edit.setFont(new Font("SansSerif", Font.BOLD, 20));
		edit.setSize(W, W);
		edit.setVisible(true);
		edit.addMouseListener(this);

		circle = new Ellipse2D.Double();
		circle.setFrame(0, 0, W, W);

		add(edit);
	}

	public void rotate() {

		double theta = Math.toRadians(ScalePanel.tiltDir * 25);
		double px = getLocation().x + circle.getCenterX();
		double py = getLocation().y + circle.getCenterY();
		int ox = ScalePanel.center.x;
		int oy = ScalePanel.center.y;

		int newX = (int) (Math.cos(theta) * (px - ox) - Math.sin(theta)
				* (py - oy) + ox);
		int newY = (int) (Math.sin(theta) * (px - ox) + Math.cos(theta)
				* (py - oy) + oy);

		setLocation(newX - W / 2, newY - W / 2);
	}

	public int updateWeight() {
		try {
			String val = edit.getText().toString();
			weight = Integer.parseInt(val);
		} catch (NumberFormatException nfe) {
			JOptionPane.showMessageDialog(this, "Fix your input!");
		}
		return weight;
	}

	public abstract Term cloneMe();

	@Override
	public void mouseClicked(MouseEvent me) {

	}

	@Override
	public void mouseEntered(MouseEvent arg0) {
	}

	@Override
	public void mouseExited(MouseEvent arg0) {
	}

	@Override
	public void mousePressed(MouseEvent arg0) {
	}

	@Override
	public void mouseReleased(MouseEvent arg0) {
	}
}