import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

public class XBin extends Term implements MouseListener {

	JLabel xLabel;
	public static int weight;
	private int coefficient;

	public XBin(RemoveTermListener removeTermListener) {
		super(removeTermListener);
		setup();
	}

	public XBin(RemoveTermListener removeTermListener, int x, int y) {
		super(removeTermListener, x, y);
		setup();
	}

	public void setup() {
		addMouseListener(this);
		edit.setText("1");
		edit.setHorizontalAlignment(JTextField.LEFT);
		edit.setLocation(15, 0);
		xLabel = new JLabel("X");
		xLabel.setFont(new Font("SansSerif", Font.BOLD, 12));
		xLabel.setHorizontalAlignment(JTextField.RIGHT);
		xLabel.setBounds(W - 30, 0, 30, W);
		add(xLabel);
	}

	@Override
	protected void paintComponent(Graphics g) {
		super.paintComponent(g);
		Graphics2D g2 = (Graphics2D) g;

		if (XBin.weight == 0) {
			xLabel.setForeground(Color.gray);
		} else if (XBin.weight < 0) {
			xLabel.setForeground(Color.red);
		} else {
			xLabel.setForeground(Color.blue);
		}

		if (coefficient == 0) {
			g2.setColor(Color.white);
		} else if (coefficient < 0) {
			g2.setColor(Color.red);
		} else {
			g2.setColor(Color.blue);
		}

		g2.fill(circle);
	}

	@Override
	public int updateWeight() {
		try {
			String val = ScalePanel.xVal.getText().toString();
			XBin.weight = Integer.parseInt(val);
		} catch (NumberFormatException nfe) {
			JOptionPane.showMessageDialog(this, "Fix your X value!");
		}
		return XBin.weight;

	}

	@Override
	public void mouseClicked(MouseEvent me) {
		if (me.getClickCount() == 2) {
			removeTermListener.removeTerm(this);
		} else if (me.getClickCount() == 1) {
			XBin.weight *= -1;
			repaint();
		}
	}

	public XBin cloneMe(int x, int y) {
		XBin x1 = new XBin(removeTermListener, x, y);
		x1.coefficient = this.coefficient;
		return x1;
	}
}
